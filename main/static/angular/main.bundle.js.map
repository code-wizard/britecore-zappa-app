{"version":3,"sources":["/Users/ebuka/dev/britecore/brite-core-app/src/$_lazy_route_resource lazy","/Users/ebuka/dev/britecore/brite-core-app/src/app/app.component.css","/Users/ebuka/dev/britecore/brite-core-app/src/app/app.component.html","/Users/ebuka/dev/britecore/brite-core-app/src/app/app.component.ts","/Users/ebuka/dev/britecore/brite-core-app/src/app/app.module.ts","/Users/ebuka/dev/britecore/brite-core-app/src/app/app.route.module.ts","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/insurers.component.css","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/insurers.component.html","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/insurers.component.ts","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/risk-types/risk-types.component.css","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/risk-types/risk-types.component.html","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/risk-types/risk-types.component.ts","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/subscribe/subscribe.component.css","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/subscribe/subscribe.component.html","/Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/subscribe/subscribe.component.ts","/Users/ebuka/dev/britecore/brite-core-app/src/app/services/risk.service.ts","/Users/ebuka/dev/britecore/brite-core-app/src/environments/environment.ts","/Users/ebuka/dev/britecore/brite-core-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\nspan.has-error.help-block{\\n  color: #a94442 !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {RiskService} from \"./services/risk.service\";\nimport {FormArray, FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'app';\n\n  constructor(){}\n\n  ngOnInit(){\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport {HttpClientModule, HttpClientXsrfModule} from '@angular/common/http';\nimport {RiskService} from './services/risk.service';\nimport { InsurersComponent } from './insurers/insurers.component';\nimport {AppRoutingModule} from \"./app.route.module\";\nimport {SubscribeComponent} from \"./insurers/subscribe/subscribe.component\";\nimport {RiskTypesComponent} from \"./insurers/risk-types/risk-types.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {NgxPaginationModule} from \"ngx-pagination\";\nimport {BsDatepickerModule} from \"ngx-bootstrap\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InsurersComponent,\n    SubscribeComponent,\n    RiskTypesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    BsDatepickerModule.forRoot(),\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'csrftoken',\n      headerName: 'X-CSRFToken',\n    })\n  ],\n  providers: [RiskService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/app.module.ts","import {PreloadAllModules, RouterModule, Routes} from \"@angular/router\";\nimport {AppComponent} from \"./app.component\";\nimport {NgModule} from \"@angular/core\";\nimport {InsurersComponent} from \"./insurers/insurers.component\";\nimport {RiskTypesComponent} from \"./insurers/risk-types/risk-types.component\";\nimport {SubscribeComponent} from \"./insurers/subscribe/subscribe.component\";\n/**\n * Created by ebuka on 04/02/18.\n */\n\n\nconst appRoutes: Routes = [\n  // {path: '', redirectTo:  '/home', pathMatch: 'full'},\n  {path: '', component:InsurersComponent},\n  {path: 'new-risk-type', component:RiskTypesComponent},\n  {path: 'subscribe/:id', component:SubscribeComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes,{preloadingStrategy:PreloadAllModules})],\n  exports:[RouterModule]\n})\nexport class AppRoutingModule{\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/app.route.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/insurers.component.css\n// module id = ../../../../../src/app/insurers/insurers.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h1>All Risk Types</h1>\\n      <a routerLink=\\\"/new-risk-type\\\">Click here to create new risk type</a>\\n\\n      <table class=\\\"table table-stripe\\\">\\n        <thead>\\n          <tr>\\n            <th>Name</th>\\n          </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let r of (riskList|async)?.results|paginate:{itemsPerPage:pageSize,\\n                                                                        id:'riskList',\\n                                                                        totalItems:(riskList|async)?.count,\\n                                                                        currentPage:currentPage}\\\">\\n          <td>\\n            <a routerLink=\\\"/subscribe/{{r.id}}\\\">{{r.name}}</a>\\n          </td>\\n        </tr>\\n      </table>\\n      <div class=\\\"text-right margin-top-10\\\">\\n        <pagination-controls  class=\\\"pagination\\\"\\n                              (pageChange)=\\\"pageChanged($event)\\\"\\n                              maxSize=\\\"7\\\"\\n                              id=\\\"riskList\\\"\\n                              directionLinks=\\\"true\\\"\\n                              autoHide=\\\"true\\\"\\n                              screenReaderCurrentLabel=\\\"You're on page\\\">\\n        </pagination-controls>\\n        <!--<dir-pagination-controls pagination-id=\\\"question-bank\\\" on-page-change=\\\"questionBankPageChanged(newPageNumber)\\\"></dir-pagination-controls>-->\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/insurers.component.html\n// module id = ../../../../../src/app/insurers/insurers.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {RiskService} from \"../services/risk.service\";\n\n@Component({\n  selector: 'app-insurers',\n  templateUrl: './insurers.component.html',\n  styleUrls: ['./insurers.component.css']\n})\nexport class InsurersComponent implements OnInit {\n  riskList;\n  pageSize =2;\n  page=1;\n  currentPage;\n  constructor(private riskService:RiskService) { }\n\n  ngOnInit(){\n    this.getRiskTypes();\n\n  }\n\n  getRiskTypes(){\n    this.riskList = this.riskService.getRiskTypes(this.page,this.pageSize);\n  }\n  pageChanged(page){\n    this.page = page;\n    this.getRiskTypes();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/insurers.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/risk-types/risk-types.component.css\n// module id = ../../../../../src/app/insurers/risk-types/risk-types.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h2> Create New Risk Type</h2>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"Risk Name\\\"  formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n        </div>\\n        <h3>Add custom fields</h3>\\n\\n        <ng-container formArrayName=\\\"attributes\\\">\\n          <ng-container *ngFor=\\\"let a of form.get('attributes').controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"form-inline\\\">\\n              <div class=\\\"form-group\\\">\\n                <input placeholder=\\\"Field label\\\" formControlName=\\\"label\\\" class=\\\"form-control\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <select class=\\\"form-control\\\" formControlName=\\\"type\\\" (change)=\\\"initOption(i)\\\">\\n                  <option value=\\\"\\\" >---Select type---</option>\\n                  <!--<option value=\\\"number\\\">Number</option>-->\\n                  <!--<option value=\\\"date\\\">Date</option>-->\\n                  <!--<option value=\\\"text\\\">Text</option>-->\\n                  <!--<option value=\\\"boolean\\\">Boolean</option>-->\\n                  <!--<option value=\\\"enum\\\">Enum</option>-->\\n                  <option *ngFor=\\\"let f of (fieldTypes|async)\\\" [value]=\\\"f.name\\\">{{f.name}}</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\" *ngIf=\\\"form.value.attributes[i].type==='text'\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"max_length\\\" placeholder=\\\"Max Length\\\" class=\\\"form-control\\\">\\n              </div>\\n              <div class=\\\"checkbox\\\">\\n                <label> Required <input formControlName=\\\"required\\\" type=\\\"checkbox\\\"></label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <button  class=\\\"btn btn-danger\\\"\\n                         type=\\\"button\\\"\\n                        (click)=\\\"deleteField(i)\\\">Delete Field</button>\\n              </div>\\n\\n            </div>\\n\\n            <div *ngIf=\\\"form.value.attributes[i].type==='enum' || form.value.attributes[i].type==='boolean'\\\"\\n                 formArrayName=\\\"options\\\">\\n              <h4>Options</h4>\\n              <div class=\\\"form-inline\\\" style=\\\"margin-top: 10px\\\" *ngFor=\\\"let o of a.controls.options.controls;let ii =index\\\"\\n                   [formGroupName]=\\\"ii\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"value\\\"\\n                         placeholder=\\\"Option\\\">\\n                </div>\\n                <div class=\\\"form-group\\\" *ngIf=\\\"form.value.attributes[i].type==='enum'\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteOption(ii)\\\">Delete</button>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\"\\n                   *ngIf=\\\"form.value.attributes[i].type==='enum'\\\"\\n                   style=\\\"margin-top: 10px\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"addOption(i)\\\">Add option</button>\\n              </div>\\n\\n            </div>\\n            <hr>\\n          </ng-container>\\n        </ng-container>\\n        <div class=\\\"clearfix\\\" style=\\\"margin-top: 10px\\\"></div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"loading\\\">Save</button>\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"addAttribute()\\\">Add Attribute</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/risk-types/risk-types.component.html\n// module id = ../../../../../src/app/insurers/risk-types/risk-types.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {RiskService} from \"../../services/risk.service\";\nimport {FormArray, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-risk-types',\n  templateUrl: './risk-types.component.html',\n  styleUrls: ['./risk-types.component.css']\n})\nexport class RiskTypesComponent implements OnInit {\n\n  constructor(private riskService:RiskService) { }\n  form:FormGroup;\n  fieldTypes;\n  loading;\n  ngOnInit() {\n    this.fieldTypes = this.riskService.getFieldTypes();\n    this.form = new FormGroup({\n      name:new FormControl(null,Validators.required),\n      attributes:new FormArray([]),\n    })\n  }\n\n  addAttribute(){\n    let attribute = this.form.get(\"attributes\") as FormArray;\n\n    attribute.push(new FormGroup({\n      name: new FormControl(null,Validators.required),\n      label:new FormControl(null, Validators.required),\n      required:new FormControl(false),\n      type:new FormControl(\"\",Validators.required),\n      max_length: new FormControl(null),\n      options:new FormArray([])\n    }))\n  }\n\n  initOption(index){\n\n    let attributes = this.form.get(\"attributes\") as FormArray;\n    console.log(attributes,index)\n    let fg = attributes.controls[index] as FormGroup;\n    let type = fg.value.type;\n\n    let options = fg.controls.options as FormArray;\n    while (0 !== options.length) {\n      options.removeAt(0);\n    }\n    if(type ==='enum'){\n      options.push(\n        new FormGroup({\n          value:new FormControl(null,Validators.required)\n        })\n      )\n    }\n    else if(type ==='boolean'){\n      this.initOptionBoolean(index);\n    }\n    else{\n      let options = fg.controls.options as FormArray;\n      while (0 !== options.length) {\n        options.removeAt(0);\n      }\n    }\n  }\n\n  addOption(index){\n    let attributes = this.form.get(\"attributes\") as FormArray;\n    let fg = attributes.controls[index] as FormGroup;\n\n    let options = fg.controls.options as FormArray;\n    options.push(\n      new FormGroup({\n        value:new FormControl(null,Validators.required)\n      })\n    )\n  }\n  initOptionBoolean(index){\n\n    let attributes = this.form.get(\"attributes\") as FormArray;\n    let fg = attributes.controls[index] as FormGroup;\n    let options = fg.controls.options as FormArray;\n    while (0 !== options.length) {\n        options.removeAt(0);\n      }\n    options.push(\n      new FormGroup({\n        value:new FormControl(\"True\",Validators.required)\n      })\n    );\n    options.push(\n      new FormGroup({\n        value:new FormControl(\"False\",Validators.required)\n      })\n    )\n    console.log(options)\n  }\n  //\n\n\n  deleteField(index){\n    let array = this.form.get(\"attributes\") as FormArray;\n    array.removeAt(index);\n  }\n\n  deleteOption(index){\n    let attributes = this.form.get(\"attributes\") as FormArray;\n    let fg = attributes.controls[index] as FormGroup;\n    let options = fg.controls.options as FormArray;\n    options.removeAt(index);\n  }\n\n  save(){\n    this.loading = true;\n    let data = this.form.value;\n    data[\"fields\"] = {attributes:this.form.value.attributes};\n    data[\"name\"] = this.form.value.name;\n    data[\"insurer\"] = 1;\n    this.riskService.createNewRiskType(data)\n      .subscribe(\n        (data)=>{\n          console.log(data)\n          this.form.reset();\n        },\n        (error)=>{\n          console.log(error)\n        },\n        ()=>{\n          this.loading = false;\n        }\n      )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/risk-types/risk-types.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/subscribe/subscribe.component.css\n// module id = ../../../../../src/app/insurers/subscribe/subscribe.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to Britecore App!\\n  </h1>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div>\\n        <form>\\n          <div class=\\\"form-group\\\" *ngFor=\\\"let a of riskTypes?.fields.attributes; let i=index\\\">\\n\\n            <label>\\n              {{a.label}}\\n            </label>\\n            <ng-container *ngIf=\\\"a.type==='number'\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" [attr.required]=\\\"a.required\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"a.type==='text'\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     [attr.maxlength]=\\\"a.max_length\\\"\\n                     [attr.required]=\\\"a.required\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"a.type==='date'\\\">\\n              <!--<input type=\\\"date\\\" class=\\\"form-control\\\" >-->\\n              <input type=\\\"text\\\"\\n                     class=\\\"form-control\\\"\\n                     #dp=\\\"bsDatepicker\\\"\\n                     bsDatepicker [(bsValue)]=\\\"bsValue\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"a.type==='boolean'\\\">\\n              <div class=\\\"radio\\\"*ngFor=\\\"let e of a.options\\\" >\\n                <label><input type=\\\"radio\\\"\\n                              name=\\\"{{e.value}}\\\" [value]=\\\"e.value\\\"\\n\\n                              [attr.required]=\\\"a.required\\\"> {{a.label}} </label>\\n              </div>\\n\\n            </ng-container>\\n            <ng-container *ngIf=\\\"a.type==='enum'\\\">\\n              <select class=\\\"form-control\\\" [attr.required]=\\\"a.required\\\">\\n                <option *ngFor=\\\"let e of a.options\\\" [value]=\\\"e.value\\\">{{e.value}}</option>\\n              </select>\\n            </ng-container>\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/subscribe/subscribe.component.html\n// module id = ../../../../../src/app/insurers/subscribe/subscribe.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport {RiskService} from \"../../services/risk.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-subscribe',\n  templateUrl: './subscribe.component.html',\n  styleUrls: ['./subscribe.component.css']\n})\nexport class SubscribeComponent implements OnInit {\n  riskTypes;\n  form:FormGroup;\n\n  constructor(private riskService:RiskService,\n              private activeRoute:ActivatedRoute){}\n\n  ngOnInit(){\n    let param = this.activeRoute.snapshot.paramMap;\n    console.log(param);\n    let id = param[\"params\"].id;\n    this.riskService.getRiskType(id)\n      .subscribe(\n        (data)=>{\n          console.log(data)\n          this.riskTypes =data;\n          // let attributes = new FormArray([]);\n          // for (let a of data[\"attributes\"]){\n          //\n          // }\n          // this.form = new FormGroup({\n          //   name: new FormControl()\n          // })\n        }\n      )\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/insurers/subscribe/subscribe.component.ts","/**\n * Created by ebuka on 03/02/18.\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\ndeclare var Django;\n@Injectable()\n\nexport class RiskService {\n\n  constructor(private http:HttpClient){}\n\n  getRiskType(type){\n    // const url = Django.url(\"risk-api:risk-detail\",[type]);\n    const url = \"/main/risk/api/v1/\"+type+\"/\";\n    return this.http.get(url);\n  }\n\n  getFieldTypes(){\n    const url = \"/main/field-types/api/v1/\";\n    return this.http.get(url);\n  }\n\n  createNewRiskType(data){\n    const url = \"/main/risk/api/v1/\";\n    return this.http.post(url,data);\n  }\n\n\n  getRiskTypes(page,pageSize){\n    const url = \"/main/risk/api/v1/\"+\"?page=\"+page+\"&page_size=\"+pageSize;\n    return this.http.get(url);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/app/services/risk.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/ebuka/dev/britecore/brite-core-app/src/main.ts"],"sourceRoot":"webpack:///"}